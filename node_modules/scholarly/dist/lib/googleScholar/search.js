"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseScholarArticle = void 0;
var config_1 = require("../config");
var cheerio_1 = __importDefault(require("cheerio"));
var baseUrl = "http://scholar.google.com";
/**
 *
 *
 * @param {CheerioStatic} $
 * @param {Cheerio} div
 * @param {Article} article
 */
var _parsePublicationTag = function ($, div, article) {
    var _a;
    var authorHTMLString = $(div).text();
    if (authorHTMLString === "") {
        return;
    }
    // Author Tag format (author1, author2 - publication, year - journal)
    var author = "";
    var ellipsisIdx = authorHTMLString.indexOf("...");
    for (var idx = 0; idx < authorHTMLString.length; idx++) {
        var char = authorHTMLString[idx];
        if (char === "," || char === "-" || idx === ellipsisIdx) {
            article.authors.push(author.trim());
            if (char !== ",") {
                authorHTMLString = authorHTMLString.substr(idx === ellipsisIdx ? idx + 3 : idx + 1);
                break;
            }
        }
        else {
            author += char;
        }
    }
    var splitData = authorHTMLString.split(" - ");
    article.publication = (_a = splitData.pop()) === null || _a === void 0 ? void 0 : _a.trim();
    var year = splitData.pop();
    if (year) {
        article.year = parseInt(year.substr(-5));
    }
    return;
};
/**
 *
 *
 * @param {CheerioStatic} $
 * @param {Cheerio} div
 * @param {Article} article
 */
var _parseFooterLinks = function ($, div, article) {
    $(div).each(function (_, el) {
        if ($) {
            var href = $(el).attr("href");
            if (!href) {
                return;
            }
            if (href.indexOf("/scholar?cites") >= 0) {
                var citationCountPrefix = "Cited by ";
                article.citationUrl = baseUrl + href;
                article.numCitations = parseInt($(el).text().substr(citationCountPrefix.length));
            }
            else if (href.indexOf("/scholar?q=related") >= 0) {
                article.relatedUrl = baseUrl + href;
            }
            else if (href.indexOf("/scholar?cluster") >= 0) {
                article.urlVersionsList = baseUrl + href;
            }
        }
    });
};
/**
 *
 *
 * @param {CheerioStatic} $
 * @param {CheerioElement} div
 * @param {IHTMLTags} tags
 * @returns {Article|undefined}
 */
var _parseScholarArticle = function ($, div, tags) {
    if ($) {
        var article = new config_1.Article();
        article.title = $(div).find(tags.title).text().trim();
        article.url = $(div).find(tags.url).attr("href");
        if (tags.description)
            article.description = $(div).find(tags.description).text();
        if (tags.pdf)
            article.pdf = $($(div).find(tags.pdf)[0]).attr("href");
        if (tags.footers)
            _parseFooterLinks($, $(div).find(tags.footers), article);
        _parsePublicationTag($, $(div).find(tags.authors), article);
        return article;
    }
};
/**
 *
 *
 * @param {string} html
 * @param {IHTMLTags} tags
 * @returns {IArticle[]}
 */
var parseScholarArticle = function (html, tags) {
    var articles = [];
    var $ = cheerio_1.default.load(html);
    var allResults = $(tags.results);
    allResults.each(function (_, div) {
        var article = _parseScholarArticle($, div, tags);
        if (article && article.title !== "")
            articles.push(article);
    });
    return articles;
};
exports.parseScholarArticle = parseScholarArticle;
